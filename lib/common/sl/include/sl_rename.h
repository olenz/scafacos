/*
 *  Copyright (C) 2011, 2012, 2013 Michael Hofmann
 *  
 *  This file is part of ScaFaCoS.
 *  
 *  ScaFaCoS is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  ScaFaCoS is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser Public License for more details.
 *  
 *  You should have received a copy of the GNU Lesser Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *  

 *  
 *  SL - Sorting Library, michael <dot> hofmann <at> informatik <dot> tu-chemnitz <dot> de
 */


#ifndef __SL_RENAME_H__
#define __SL_RENAME_H__


#define SL_CONCAT(_a_, _b_)           SL_CONCAT_(_a_, _b_)
#define SL_CONCAT_(_a_, _b_)          _a_##_b_

#define SL_CONCONCAT(_a_, _b_, _c_)   SL_CONCONCAT_(_a_, _b_, _c_)
#define SL_CONCONCAT_(_a_, _b_, _c_)  _a_##_b_##_c_

#ifdef SL_PREFIX
# define SL_VAR(_v_)   SL_CONCAT(SL_PREFIX, _v_)
# define SL_FUNC(_f_)  SL_CONCAT(SL_PREFIX, _f_)
#else
# define SL_VAR(_v_)   _v_
# define SL_FUNC(_f_)  _f_
#endif


/* src/base/base.c */
#define binning_create  SL_FUNC(binning_create)
#define binning_destroy  SL_FUNC(binning_destroy)
#define binning_pre  SL_FUNC(binning_pre)
#define binning_exec_reset  SL_FUNC(binning_exec_reset)
#define binning_exec  SL_FUNC(binning_exec)
#define binning_refine  SL_FUNC(binning_refine)
#define binning_hit  SL_FUNC(binning_hit)
#define binning_finalize  SL_FUNC(binning_finalize)
#define binning_post  SL_FUNC(binning_post)
#define binning_radix_create  SL_FUNC(binning_radix_create)
#define binning_radix_destroy  SL_FUNC(binning_radix_destroy)
#define binning_radix_pre  SL_FUNC(binning_radix_pre)
#define binning_radix_exec  SL_FUNC(binning_radix_exec)
#define binning_radix_refine  SL_FUNC(binning_radix_refine)
#define binning_radix_hit  SL_FUNC(binning_radix_hit)
#define binning_radix_finalize  SL_FUNC(binning_radix_finalize)
#define binning_radix_post  SL_FUNC(binning_radix_post)
#define elements_alloc  SL_FUNC(elements_alloc)
#define elements_free  SL_FUNC(elements_free)
#define elements_realloc  SL_FUNC(elements_realloc)
#define elements_alloca  SL_FUNC(elements_alloca)
#define elements_freea  SL_FUNC(elements_freea)
#define elements_alloc_from_blocks  SL_FUNC(elements_alloc_from_blocks)
#define elements_alloc_from_block  SL_FUNC(elements_alloc_from_block)
#define elements_alloc_block  SL_FUNC(elements_alloc_block)
#define elements_copy  SL_FUNC(elements_copy)
#define elements_copy_at  SL_FUNC(elements_copy_at)
#define elements_ncopy  SL_FUNC(elements_ncopy)
#define elements_nmove  SL_FUNC(elements_nmove)
#define elements_printf  SL_FUNC(elements_printf)
#define elements_extract  SL_FUNC(elements_extract)
#define elements_touch  SL_FUNC(elements_touch)
#define elements_digest_sum  SL_FUNC(elements_digest_sum)
#define elements_crc32  SL_FUNC(elements_crc32)
#define elements_digest_hash  SL_FUNC(elements_digest_hash)
#define elements_random_exchange  SL_FUNC(elements_random_exchange)
#define elements_keys_init_seed  SL_FUNC(elements_keys_init_seed)
#define elements_keys_init  SL_FUNC(elements_keys_init)
#define elements_keys_init_randomized  SL_FUNC(elements_keys_init_randomized)
#define elements_keys_init_from_file  SL_FUNC(elements_keys_init_from_file)
#define elements_keys_save_to_file  SL_FUNC(elements_keys_save_to_file)
#define elements_validate_order  SL_FUNC(elements_validate_order)
#define elements_validate_order_bmask  SL_FUNC(elements_validate_order_bmask)
#define elements_validate_order_weight  SL_FUNC(elements_validate_order_weight)
#define elements_keys_stats  SL_FUNC(elements_keys_stats)
#define elements_keys_stats_print  SL_FUNC(elements_keys_stats_print)
#define elements_print_keys  SL_FUNC(elements_print_keys)
#define elements_print_all  SL_FUNC(elements_print_all)
#define elements_get_weight  SL_FUNC(elements_get_weight)
#define elements_get_minmax_keys  SL_FUNC(elements_get_minmax_keys)
#define elements_alloc_packed  SL_FUNC(elements_alloc_packed)
#define elements_free_packed  SL_FUNC(elements_free_packed)
#define elements_alloc_packed_from_block  SL_FUNC(elements_alloc_packed_from_block)
#define elements_pack_indexed  SL_FUNC(elements_pack_indexed)
#define elements_pack  SL_FUNC(elements_pack)
#define elements_pack_at  SL_FUNC(elements_pack_at)
#define elements_unpack_indexed  SL_FUNC(elements_unpack_indexed)
#define elements_unpack  SL_FUNC(elements_unpack)
#define elements_unpack_at  SL_FUNC(elements_unpack_at)
#define elements_unpack_keys  SL_FUNC(elements_unpack_keys)
#define merge2_basic_auto_01_x  SL_FUNC(merge2_basic_auto_01_x)
#define merge2_basic_01_x  SL_FUNC(merge2_basic_01_x)
#define merge2_basic_01_X  SL_FUNC(merge2_basic_01_X)
#define merge2_simplify_s1  SL_FUNC(merge2_simplify_s1)
#define merge2_memory_adaptive  SL_FUNC(merge2_memory_adaptive)
#define merge2_compo_hula_  SL_FUNC(merge2_compo_hula_)
#define merge2_compo_hula  SL_FUNC(merge2_compo_hula)
#define merge2_basic_sseq_x0_1  SL_FUNC(merge2_basic_sseq_x0_1)
#define merge2_basic_sseq_0x_1  SL_FUNC(merge2_basic_sseq_0x_1)
#define merge2_basic_sseq_01_x  SL_FUNC(merge2_basic_sseq_01_x)
#define merge2_basic_sseq_01  SL_FUNC(merge2_basic_sseq_01)
#define merge2_basic_sbin_x0_1  SL_FUNC(merge2_basic_sbin_x0_1)
#define merge2_basic_sbin_0x_1  SL_FUNC(merge2_basic_sbin_0x_1)
#define merge2_basic_sbin_01_x  SL_FUNC(merge2_basic_sbin_01_x)
#define merge2_basic_sbin_01  SL_FUNC(merge2_basic_sbin_01)
#define merge2_basic_shyb_x0_1  SL_FUNC(merge2_basic_shyb_x0_1)
#define merge2_basic_shyb_0x_1  SL_FUNC(merge2_basic_shyb_0x_1)
#define merge2_basic_shyb_01_x  SL_FUNC(merge2_basic_shyb_01_x)
#define merge2_basic_shyb_01  SL_FUNC(merge2_basic_shyb_01)
#define merge2_basic_straight_x0_1  SL_FUNC(merge2_basic_straight_x0_1)
#define merge2_basic_straight_0x_1  SL_FUNC(merge2_basic_straight_0x_1)
#define merge2_basic_straight_01_x  SL_FUNC(merge2_basic_straight_01_x)
#define merge2_basic_straight_x_0_1  SL_FUNC(merge2_basic_straight_x_0_1)
#define merge2_basic_straight_X0_1  SL_FUNC(merge2_basic_straight_X0_1)
#define merge2_basic_straight_0X_1  SL_FUNC(merge2_basic_straight_0X_1)
#define merge2_basic_straight_01_X  SL_FUNC(merge2_basic_straight_01_X)
#define merge2_basic_straight_X0_1u  SL_FUNC(merge2_basic_straight_X0_1u)
#define merge2_compo_tridgell  SL_FUNC(merge2_compo_tridgell)
#define mergep_2way_ip_int  SL_FUNC(mergep_2way_ip_int)
#define mergep_2way_ip_int_rec  SL_FUNC(mergep_2way_ip_int_rec)
#define mergep_heap_int  SL_FUNC(mergep_heap_int)
#define mergep_heap_int_idx  SL_FUNC(mergep_heap_int_idx)
#define mergep_heap_idx  SL_FUNC(mergep_heap_idx)
#define mergep_heap_unpack_idx  SL_FUNC(mergep_heap_unpack_idx)
#define mergep_heap_unpack_idxonly  SL_FUNC(mergep_heap_unpack_idxonly)
#define permute_generic_db  SL_FUNC(permute_generic_db)
#define permute_generic_ip  SL_FUNC(permute_generic_ip)
#define sl_search_sequential_lt  SL_FUNC(sl_search_sequential_lt)
#define sl_search_sequential_le  SL_FUNC(sl_search_sequential_le)
#define sl_search_sequential_gt  SL_FUNC(sl_search_sequential_gt)
#define sl_search_sequential_ge  SL_FUNC(sl_search_sequential_ge)
#define sl_search_p_sequential_lt  SL_FUNC(sl_search_p_sequential_lt)
#define sl_search_p_sequential_le  SL_FUNC(sl_search_p_sequential_le)
#define sl_search_p_sequential_gt  SL_FUNC(sl_search_p_sequential_gt)
#define sl_search_p_sequential_ge  SL_FUNC(sl_search_p_sequential_ge)
#define sl_search_binary_lt  SL_FUNC(sl_search_binary_lt)
#define sl_search_binary_le  SL_FUNC(sl_search_binary_le)
#define sl_search_binary_gt  SL_FUNC(sl_search_binary_gt)
#define sl_search_binary_ge  SL_FUNC(sl_search_binary_ge)
#define sl_search_p_binary_lt  SL_FUNC(sl_search_p_binary_lt)
#define sl_search_p_binary_le  SL_FUNC(sl_search_p_binary_le)
#define sl_search_p_binary_gt  SL_FUNC(sl_search_p_binary_gt)
#define sl_search_p_binary_ge  SL_FUNC(sl_search_p_binary_ge)
#define sl_search_binary_lt_bmask  SL_FUNC(sl_search_binary_lt_bmask)
#define sl_search_binary_le_bmask  SL_FUNC(sl_search_binary_le_bmask)
#define sl_search_binary_sign_switch  SL_FUNC(sl_search_binary_sign_switch)
#define sl_search_hybrid_lt  SL_FUNC(sl_search_hybrid_lt)
#define sl_search_hybrid_le  SL_FUNC(sl_search_hybrid_le)
#define sl_search_hybrid_gt  SL_FUNC(sl_search_hybrid_gt)
#define sl_search_hybrid_ge  SL_FUNC(sl_search_hybrid_ge)
#define sl_search_p_hybrid_lt  SL_FUNC(sl_search_p_hybrid_lt)
#define sl_search_p_hybrid_le  SL_FUNC(sl_search_p_hybrid_le)
#define sl_search_p_hybrid_gt  SL_FUNC(sl_search_p_hybrid_gt)
#define sl_search_p_hybrid_ge  SL_FUNC(sl_search_p_hybrid_ge)
#define sl_default_context  SL_VAR(sl_default_context)
#define default_sl_dummy_rank  SL_VAR(default_sl_dummy_rank)
#define default_rti  SL_VAR(default_rti)
#define ilog2c  SL_FUNC(ilog2c)
#define ilog2f  SL_FUNC(ilog2f)
#define print_bits  SL_FUNC(print_bits)
#define pivot_random  SL_FUNC(pivot_random)
#define counts2displs  SL_FUNC(counts2displs)
#define displs2counts  SL_FUNC(displs2counts)
#define get_displcounts_extent  SL_FUNC(get_displcounts_extent)
#define elem_set_data  SL_FUNC(elem_set_data)
#define elem_get_max_byte  SL_FUNC(elem_get_max_byte)
#define elem_reverse_aio  SL_FUNC(elem_reverse_aio)
#define elem_reverse_obo  SL_FUNC(elem_reverse_obo)
#define elem_reverse  SL_FUNC(elem_reverse)
#define elem_nxchange_at  SL_FUNC(elem_nxchange_at)
#define elem_nxchange  SL_FUNC(elem_nxchange)
#define elem_nxchange_ro0  SL_FUNC(elem_nxchange_ro0)
#define elem_rotate_3rev_aio  SL_FUNC(elem_rotate_3rev_aio)
#define elem_rotate_3rev_obo  SL_FUNC(elem_rotate_3rev_obo)
#define elem_rotate_cycles_aio  SL_FUNC(elem_rotate_cycles_aio)
#define elem_rotate_cycles_obo  SL_FUNC(elem_rotate_cycles_obo)
#define elem_rotate  SL_FUNC(elem_rotate)
#define elem_rotate_ro0  SL_FUNC(elem_rotate_ro0)
#define elem_rotate_ro1  SL_FUNC(elem_rotate_ro1)
#define sort_counting_use_displs  SL_FUNC(sort_counting_use_displs)
#define sort_counting_use_counts  SL_FUNC(sort_counting_use_counts)
#define sort_counting_get_counts  SL_FUNC(sort_counting_get_counts)
#define sort_counting  SL_FUNC(sort_counting)
#define sort_heap_i  SL_FUNC(sort_heap_i)
#define sort_heap_p  SL_FUNC(sort_heap_p)
#define sort_heap  SL_FUNC(sort_heap)
#define sort_insert_bmask_kernel  SL_FUNC(sort_insert_bmask_kernel)
#define sort_insert_kernel  SL_FUNC(sort_insert_kernel)
#define sort_insert  SL_FUNC(sort_insert)
#define sort_permute_forward_  SL_FUNC(sort_permute_forward_)
#define sort_permute_forward_masked  SL_FUNC(sort_permute_forward_masked)
#define sort_permute_forward  SL_FUNC(sort_permute_forward)
#define sort_permute_backward_  SL_FUNC(sort_permute_backward_)
#define sort_permute_backward_masked  SL_FUNC(sort_permute_backward_masked)
#define sort_permute_backward  SL_FUNC(sort_permute_backward)
#define sort_quick_i  SL_FUNC(sort_quick_i)
#define sort_quick_p  SL_FUNC(sort_quick_p)
#define sort_quick_h  SL_FUNC(sort_quick_h)
#define sort_quick  SL_FUNC(sort_quick)
#define default_sr_ip_threshold  SL_VAR(default_sr_ip_threshold)
#define default_sr_db_threshold  SL_VAR(default_sr_db_threshold)
#define default_sr_ma_threshold  SL_VAR(default_sr_ma_threshold)
#define sort_radix_ip  SL_FUNC(sort_radix_ip)
#define sort_radix_db  SL_FUNC(sort_radix_db)
#define sort_radix_ma  SL_FUNC(sort_radix_ma)
#define sort_radix  SL_FUNC(sort_radix)
#define sort_radix_1bit_kernel  SL_FUNC(sort_radix_1bit_kernel)
#define sort_radix_1bit  SL_FUNC(sort_radix_1bit)
#define default_sri_threshold  SL_VAR(default_sri_threshold)
#define sort_radix_iter  SL_FUNC(sort_radix_iter)
#define sn_hypercube_lh  SL_FUNC(sn_hypercube_lh)
#define sn_hypercube_hl  SL_FUNC(sn_hypercube_hl)
#define sn_odd_even_trans  SL_FUNC(sn_odd_even_trans)
#define sn_odd  SL_FUNC(sn_odd)
#define sn_even  SL_FUNC(sn_even)
#define sn_batcher  SL_FUNC(sn_batcher)
#define sn_bitonic  SL_FUNC(sn_bitonic)
#define sn_connected  SL_FUNC(sn_connected)
#define split_generic_db  SL_FUNC(split_generic_db)
#define split_generic_ip  SL_FUNC(split_generic_ip)
#define split_generic_count_db  SL_FUNC(split_generic_count_db)
#define split_generic_count_ip  SL_FUNC(split_generic_count_ip)
#define split_generic_rearrange_db  SL_FUNC(split_generic_rearrange_db)
#define split_generic_rearrange_ip  SL_FUNC(split_generic_rearrange_ip)
#define splitter_reset  SL_FUNC(splitter_reset)
#define splitx_radix  SL_FUNC(splitx_radix)
#define split2_lt_ge  SL_FUNC(split2_lt_ge)
#define split2_le_gt  SL_FUNC(split2_le_gt)
#define split3_lt_eq_gt  SL_FUNC(split3_lt_eq_gt)
#define split3_lt_eq_gt_old  SL_FUNC(split3_lt_eq_gt_old)
#define split2_b  SL_FUNC(split2_b)
#define splitk_k2c_af  SL_FUNC(splitk_k2c_af)
#define splitk_k2c  SL_FUNC(splitk_k2c)
#define splitk_k2c_count  SL_FUNC(splitk_k2c_count)

/* src/base_mpi/base_mpi.c */
#define mpi_binning_create  SL_FUNC(mpi_binning_create)
#define mpi_binning_destroy  SL_FUNC(mpi_binning_destroy)
#define mpi_binning_pre  SL_FUNC(mpi_binning_pre)
#define mpi_binning_exec_reset  SL_FUNC(mpi_binning_exec_reset)
#define mpi_binning_exec_local  SL_FUNC(mpi_binning_exec_local)
#define mpi_binning_exec_global  SL_FUNC(mpi_binning_exec_global)
#define mpi_binning_refine  SL_FUNC(mpi_binning_refine)
#define mpi_binning_hit  SL_FUNC(mpi_binning_hit)
#define mpi_binning_finalize  SL_FUNC(mpi_binning_finalize)
#define mpi_binning_post  SL_FUNC(mpi_binning_post)
#define default_mpi_int_datatype  SL_VAR(default_mpi_int_datatype)
#define default_mpi_key_datatype  SL_VAR(default_mpi_key_datatype)
#define default_mpi_pkey_datatype  SL_VAR(default_mpi_pkey_datatype)
#define default_mpi_pwkey_datatype  SL_VAR(default_mpi_pwkey_datatype)
#define default_mpi_index_datatype  SL_VAR(default_mpi_index_datatype)
#define default_mpi_weight_datatype  SL_VAR(default_mpi_weight_datatype)
#define default_mpi_data_datatype  SL_VAR(default_mpi_data_datatype)
#define default_mpi_rank  SL_VAR(default_mpi_rank)
#define mpi_datatypes_init  SL_FUNC(mpi_datatypes_init)
#define mpi_datatypes_release  SL_FUNC(mpi_datatypes_release)
#define mpi_get_grid_properties  SL_FUNC(mpi_get_grid_properties)
#define mpi_subgroups_create  SL_FUNC(mpi_subgroups_create)
#define mpi_subgroups_delete  SL_FUNC(mpi_subgroups_delete)
#define sl_MPI_Allreduce  SL_FUNC(sl_MPI_Allreduce)
#define sl_MPI_Alltoall_int  SL_FUNC(sl_MPI_Alltoall_int)
#define default_me_sendrecv_replace_mem  SL_VAR(default_me_sendrecv_replace_mem)
#define default_me_sendrecv_replace_memsize  SL_VAR(default_me_sendrecv_replace_memsize)
#define default_me_sendrecv_replace_mpi_maxsize  SL_VAR(default_me_sendrecv_replace_mpi_maxsize)
#define mpi_elements_keys_init_from_file  SL_FUNC(mpi_elements_keys_init_from_file)
#define mpi_elements_validate_order  SL_FUNC(mpi_elements_validate_order)
#define mpi_linear_exchange_pure_keys  SL_FUNC(mpi_linear_exchange_pure_keys)
#define mpi_elements_check_order  SL_FUNC(mpi_elements_check_order)
#define mpi_check_global_order  SL_FUNC(mpi_check_global_order)
#define mpi_elements_digest_sum  SL_FUNC(mpi_elements_digest_sum)
#define mpi_elements_crc32  SL_FUNC(mpi_elements_crc32)
#define mpi_elements_digest_hash  SL_FUNC(mpi_elements_digest_hash)
#define mpi_elements_get_counts  SL_FUNC(mpi_elements_get_counts)
#define mpi_elements_get_weights  SL_FUNC(mpi_elements_get_weights)
#define mpi_elements_get_counts_and_weights  SL_FUNC(mpi_elements_get_counts_and_weights)
#define mpi_elements_sendrecv_replace  SL_FUNC(mpi_elements_sendrecv_replace)
#define default_meas_t  SL_VAR(default_meas_t)
#define default_meas_max_nprocs  SL_VAR(default_meas_max_nprocs)
#define default_meas_packed  SL_VAR(default_meas_packed)
#define default_meas_minalloc  SL_VAR(default_meas_minalloc)
#define default_meas_overalloc  SL_VAR(default_meas_overalloc)
#define tproc_create_tproc  SL_FUNC(tproc_create_tproc)
#define tproc_create_tproc_mod  SL_FUNC(tproc_create_tproc_mod)
#define tproc_create_tprocs  SL_FUNC(tproc_create_tprocs)
#define tproc_create_tprocs_mod  SL_FUNC(tproc_create_tprocs_mod)
#define tproc_free  SL_FUNC(tproc_free)
#define tproc_set_proclists  SL_FUNC(tproc_set_proclists)
#define tproc_verify  SL_FUNC(tproc_verify)
#define mpi_elements_alltoall_specific_alloc_size  SL_FUNC(mpi_elements_alltoall_specific_alloc_size)
#define mpi_elements_alltoall_specific  SL_FUNC(mpi_elements_alltoall_specific)
#define default_mea_packed  SL_VAR(default_mea_packed)
#define default_mea_db_packed  SL_VAR(default_mea_db_packed)
#define default_mea_ip_packed  SL_VAR(default_mea_ip_packed)
#define mpi_elements_alltoallv_db_packed  SL_FUNC(mpi_elements_alltoallv_db_packed)
#define mpi_elements_alltoallv_db  SL_FUNC(mpi_elements_alltoallv_db)
#define mpi_elements_alltoallv_ip_packed  SL_FUNC(mpi_elements_alltoallv_ip_packed)
#define mpi_elements_alltoallv_ip_double  SL_FUNC(mpi_elements_alltoallv_ip_double)
#define mpi_elements_alltoallv_ip_mpi  SL_FUNC(mpi_elements_alltoallv_ip_mpi)
#define mpi_elements_alltoallv_ip_dash  SL_FUNC(mpi_elements_alltoallv_ip_dash)
#define mpi_elements_alltoallv_ip  SL_FUNC(mpi_elements_alltoallv_ip)
#define mpi_elements_alltoallv_proclists_db  SL_FUNC(mpi_elements_alltoallv_proclists_db)
#define mpi_elements_packed_datatype_create  SL_FUNC(mpi_elements_packed_datatype_create)
#define mpi_elements_packed_datatype_destroy  SL_FUNC(mpi_elements_packed_datatype_destroy)
#define mpi_find_exact_equal  SL_FUNC(mpi_find_exact_equal)
#define mpi_find_exact  SL_FUNC(mpi_find_exact)
#define mpi_merge2  SL_FUNC(mpi_merge2)
#define mpi_mergek_equal  SL_FUNC(mpi_mergek_equal)
#define mpi_mergek_sorted  SL_FUNC(mpi_mergek_sorted)
#define mpi_mergek_sorted2  SL_FUNC(mpi_mergek_sorted2)
#define mpi_mergek  SL_FUNC(mpi_mergek)
#define mpi_mergek_equal2  SL_FUNC(mpi_mergek_equal2)
#define mpi_partition_exact_generic  SL_FUNC(mpi_partition_exact_generic)
#define mpi_partition_exact_radix  SL_FUNC(mpi_partition_exact_radix)
#define mpi_partition_exact_radix_ngroups  SL_FUNC(mpi_partition_exact_radix_ngroups)
#define mpi_partition_exact_radix_2groups  SL_FUNC(mpi_partition_exact_radix_2groups)
#define mpi_partition_sample_regular  SL_FUNC(mpi_partition_sample_regular)
#define mpi_rebalance  SL_FUNC(mpi_rebalance)
#define mpi_rebalance_alltoallv  SL_FUNC(mpi_rebalance_alltoallv)
#define mpi_partcond_set_even  SL_FUNC(mpi_partcond_set_even)
#define init_partconds  SL_FUNC(init_partconds)
#define init_partconds_intern  SL_FUNC(init_partconds_intern)
#define merge_partconds  SL_FUNC(merge_partconds)
#define mpi_gather_partconds_grouped  SL_FUNC(mpi_gather_partconds_grouped)
#define mpi_gather_partconds  SL_FUNC(mpi_gather_partconds)
#define mpi_allgather_partconds  SL_FUNC(mpi_allgather_partconds)
#define mpi_bcast_partconds  SL_FUNC(mpi_bcast_partconds)
#define mpi_post_check_partconds  SL_FUNC(mpi_post_check_partconds)
#define mpi_post_check_partconds_intern  SL_FUNC(mpi_post_check_partconds_intern)
#define mpi_select_stats  SL_FUNC(mpi_select_stats)
#define default_mseg_root  SL_VAR(default_mseg_root)
#define default_mseg_border_update_count_reduction  SL_VAR(default_mseg_border_update_count_reduction)
#define default_mseg_border_update_weight_reduction  SL_VAR(default_mseg_border_update_weight_reduction)
#define default_mseg_forward_only  SL_VAR(default_mseg_forward_only)
#define default_mseg_info_rounds  SL_VAR(default_mseg_info_rounds)
#define default_mseg_info_finish_rounds  SL_VAR(default_mseg_info_finish_rounds)
#define default_mseg_info_finish_rounds_avg  SL_VAR(default_mseg_info_finish_rounds_avg)
#define default_mseg_info_total_weights  SL_VAR(default_mseg_info_total_weights)
#define default_mseg_binnings  SL_VAR(default_mseg_binnings)
#define default_mseg_finalize_mode  SL_VAR(default_mseg_finalize_mode)
#define mpi_select_exact_generic_bulk  SL_FUNC(mpi_select_exact_generic_bulk)
#define mpi_select_exact_generic_grouped  SL_FUNC(mpi_select_exact_generic_grouped)
#define mpi_select_exact_generic  SL_FUNC(mpi_select_exact_generic)
#define mpi_select_exact_radix  SL_FUNC(mpi_select_exact_radix)
#define mpi_select_exact_radix_grouped  SL_FUNC(mpi_select_exact_radix_grouped)
#define default_mss_root  SL_VAR(default_mss_root)
#define mpi_select_sample_regular  SL_FUNC(mpi_select_sample_regular)
#define default_msm_t  SL_VAR(default_msm_t)
#define default_msm_sync  SL_VAR(default_msm_sync)
#define mpi_sort_merge  SL_FUNC(mpi_sort_merge)
#define mpi_sort_merge2  SL_FUNC(mpi_sort_merge2)
#define mpi_sort_merge_radix  SL_FUNC(mpi_sort_merge_radix)
#define default_msp_t  SL_VAR(default_msp_t)
#define default_msp_sync  SL_VAR(default_msp_sync)
#define default_msp_r_pc  SL_VAR(default_msp_r_pc)
#define mpi_sort_partition  SL_FUNC(mpi_sort_partition)
#define mpi_sort_partition_radix  SL_FUNC(mpi_sort_partition_radix)
#define mpi_sort_partition_exact_radix  SL_FUNC(mpi_sort_partition_exact_radix)
#define mpi_sort_partition_exact_radix_ngroups  SL_FUNC(mpi_sort_partition_exact_radix_ngroups)
#define mpi_sort_partition_exact_radix_2groups  SL_FUNC(mpi_sort_partition_exact_radix_2groups)
#define default_mssp_i_t  SL_VAR(default_mssp_i_t)
#define default_mssp_p_t  SL_VAR(default_mssp_p_t)
#define default_mssp_b_t  SL_VAR(default_mssp_b_t)
#define default_mssp_sync  SL_VAR(default_mssp_sync)
#define default_mssp_i_sync  SL_VAR(default_mssp_i_sync)
#define default_mssp_p_sync  SL_VAR(default_mssp_p_sync)
#define default_mssp_b_sync  SL_VAR(default_mssp_b_sync)
#define default_mssp_back_packed  SL_VAR(default_mssp_back_packed)
#define mpi_sort_insert_radix  SL_FUNC(mpi_sort_insert_radix)
#define mpi_sort_presorted_radix  SL_FUNC(mpi_sort_presorted_radix)
#define tproc_sort_back  SL_FUNC(tproc_sort_back)
#define tproc_mod_sort_back  SL_FUNC(tproc_mod_sort_back)
#define tprocs_sort_back  SL_FUNC(tprocs_sort_back)
#define tprocs_mod_sort_back  SL_FUNC(tprocs_mod_sort_back)
#define sort_back_tproc_count_db  SL_FUNC(sort_back_tproc_count_db)
#define sort_back_tproc_count_ip  SL_FUNC(sort_back_tproc_count_ip)
#define sort_back_tproc_rearrange_db  SL_FUNC(sort_back_tproc_rearrange_db)
#define sort_back_tproc_rearrange_ip  SL_FUNC(sort_back_tproc_rearrange_ip)
#define _sort_back  SL_VAR(_sort_back)
#define sort_back  SL_VAR(sort_back)
#define mpi_sort_back  SL_FUNC(mpi_sort_back)
#define mpi_xcounts2ycounts_all2all  SL_FUNC(mpi_xcounts2ycounts_all2all)
#define mpi_xcounts2ycounts_sparse  SL_FUNC(mpi_xcounts2ycounts_sparse)
#define mpi_xcounts2ycounts_grouped  SL_FUNC(mpi_xcounts2ycounts_grouped)
#define mpi_subxdispls2ycounts  SL_FUNC(mpi_subxdispls2ycounts)

/* src/base_mpi/dash.c */
#define ds_exec_sl_create  SL_FUNC(ds_exec_sl_create)
#define ds_exec_sl_destroy  SL_FUNC(ds_exec_sl_destroy)
#define ds_exec_sl_add_address  SL_FUNC(ds_exec_sl_add_address)


#endif /* __SL_RENAME_H__ */
